<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->

<svg
   height="800px"
   width="800px"
   version="1.1"
   id="Layer_1"
   viewBox="0 0 512 512"
   xml:space="preserve"
   sodipodi:docname="outside-lantern.svg"
   inkscape:version="1.2 (dc2aedaf03, 2022-05-15)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
   id="defs20728"><meshgradient
     inkscape:collect="always"
     id="meshgradient21064"
     gradientUnits="userSpaceOnUse"
     x="256"
     y="233.739"><meshrow
       id="meshrow21066"><meshpatch
         id="meshpatch21068"><stop
           path="c 50.0871,0  100.174,0  150.261,0"
           style="stop-color:#ffffff;stop-opacity:1"
           id="stop21070" /><stop
           path="c 0,89.0433  0,178.087  0,267.13"
           style="stop-color:#ffb655;stop-opacity:1"
           id="stop21072" /><stop
           path="c -50.0871,0  -100.174,0  -150.261,0"
           style="stop-color:#ffffff;stop-opacity:1"
           id="stop21074" /><stop
           path="c 0,-89.0433  0,-178.087  0,-267.13"
           style="stop-color:#ffb655;stop-opacity:1"
           id="stop21076" /></meshpatch></meshrow></meshgradient><meshgradient
     inkscape:collect="always"
     id="meshgradient21166"
     gradientUnits="userSpaceOnUse"
     x="105.73861"
     y="233.739"><meshrow
       id="meshrow21168"><meshpatch
         id="meshpatch21170"><stop
           path="c 100.174,0  200.349,0  300.523,0"
           style="stop-color:#ffffff;stop-opacity:1"
           id="stop21172" /><stop
           path="c 0,89.0437  0,178.087  0,267.131"
           style="stop-color:#ffda44;stop-opacity:1"
           id="stop21174" /><stop
           path="c -100.174,0  -200.349,0  -300.523,0"
           style="stop-color:#ffffff;stop-opacity:1"
           id="stop21176" /><stop
           path="c 0,-89.0437  0,-178.087  0,-267.131"
           style="stop-color:#ffda44;stop-opacity:1"
           id="stop21178" /></meshpatch></meshrow></meshgradient></defs><sodipodi:namedview
   id="namedview20726"
   pagecolor="#ffffff"
   bordercolor="#000000"
   borderopacity="0.25"
   inkscape:showpageshadow="2"
   inkscape:pageopacity="0.0"
   inkscape:pagecheckerboard="0"
   inkscape:deskcolor="#d1d1d1"
   showgrid="false"
   inkscape:zoom="1.05875"
   inkscape:cx="400.94451"
   inkscape:cy="400.47226"
   inkscape:window-width="1920"
   inkscape:window-height="1027"
   inkscape:window-x="-8"
   inkscape:window-y="-8"
   inkscape:window-maximized="1"
   inkscape:current-layer="Layer_1" />


<path
   style="fill:#6A563D;"
   d="M409.066,200.348H102.934c-5.631,0-10.886-2.837-13.973-7.554  c-3.082-4.717-3.582-10.663-1.326-15.826C116.886,110.032,182.968,66.783,256,66.783s139.119,43.25,168.37,110.185  c2.249,5.163,1.75,11.108-1.337,15.826C419.947,197.512,414.695,200.348,409.066,200.348z"
   id="path20705" />
<path
   style="fill:#554431;"
   d="M256,66.783v133.565h153.066c5.631,0,10.88-2.837,13.968-7.554  c3.088-4.717,3.587-10.663,1.337-15.826C395.119,110.032,329.032,66.783,256,66.783z"
   id="path20707" />
<path
   style="fill:url(#meshgradient21166);fill-opacity:1"
   d="M356.174,500.87H155.826c-8.348,0-15.413-6.163-16.543-14.435l-33.391-233.739  c-0.652-4.783,0.794-9.609,3.967-13.24c3.169-3.63,7.756-5.717,12.576-5.717h267.13c4.826,0,9.402,2.087,12.576,5.718  c3.174,3.631,4.619,8.457,3.967,13.24l-33.391,233.739C371.587,494.707,364.522,500.87,356.174,500.87z"
   id="path20709" />
<path
   style="fill:url(#meshgradient21064);fill-opacity:1"
   d="M389.565,233.739H256v267.13h100.174c8.348,0,15.413-6.163,16.543-14.435l33.391-233.739  c0.652-4.783-0.794-9.609-3.967-13.24C398.968,235.825,394.391,233.739,389.565,233.739z"
   id="path20711" />
<path
   style="fill:#6A563D;"
   d="M422.957,267.13H89.043c-27.619,0-50.087-22.468-50.087-50.087s22.468-50.087,50.087-50.087h333.913  c27.619,0,50.087,22.468,50.087,50.087S450.576,267.13,422.957,267.13z"
   id="path20713" />
<path
   style="fill:#554431;"
   d="M422.957,166.957H256V267.13h166.957c27.619,0,50.087-22.468,50.087-50.087  S450.576,166.957,422.957,166.957z"
   id="path20715" />
<path
   style="fill:#6A563D;"
   d="M256,512c-9.217,0-16.696-7.479-16.696-16.696v-244.87c0-9.217,7.479-16.696,16.696-16.696  s16.696,7.479,16.696,16.696v244.87C272.696,504.521,265.217,512,256,512z"
   id="path20717" />
<path
   style="fill:#554431;"
   d="M256,233.739V512c9.217,0,16.696-7.479,16.696-16.696v-244.87  C272.696,241.218,265.217,233.739,256,233.739z"
   id="path20719" />
<path
   style="fill:#6A563D;"
   d="M389.565,512h-267.13c-9.223,0-16.696-7.479-16.696-16.696c0-9.217,7.473-16.696,16.696-16.696  h267.13c9.217,0,16.696,7.479,16.696,16.696C406.261,504.521,398.782,512,389.565,512z"
   id="path20721" />
<path
   style="fill:#4d4d4d"
   d="M389.565,478.609H256V512h133.565c9.217,0,16.696-7.479,16.696-16.696  C406.261,486.087,398.782,478.609,389.565,478.609z"
   id="path20723" />
<path
   style="fill:#666666;stroke-width:0.94451"
   d="m 184.6456,798.64525 c -4.33227,-1.31782 -7.98676,-3.64703 -11.46007,-7.30412 -4.79843,-5.05235 -6.65142,-9.19077 -7.20541,-16.09244 -0.42724,-5.32245 -0.15535,-6.60051 2.59087,-12.17888 3.17923,-6.45794 8.03612,-10.91361 14.49011,-13.29311 2.22234,-0.81935 27.60095,-1.12754 97.22225,-1.18064 l 94.21488,-0.0719 V 582.78628 417.04835 l -123.96694,-0.2788 c -117.32563,-0.26387 -124.29585,-0.37248 -130.10626,-2.02728 -32.501555,-9.25643 -55.24486,-35.61988 -58.537535,-67.8552 -2.251274,-22.03999 5.301849,-44.20649 20.582695,-60.40499 14.580454,-15.45605 31.93381,-23.60509 53.24036,-25.0014 l 9.38766,-0.61521 2.29773,-4.53436 c 1.26376,-2.4939 4.68862,-8.48497 7.61081,-13.31349 36.48065,-60.27934 95.77687,-106.11888 163.10512,-126.09005 9.43281,-2.79799 11.98227,-3.89781 11.59774,-5.00313 -0.27108,-0.77922 -1.87835,-5.24203 -3.57169,-9.91736 -2.99274,-8.26294 -3.07884,-8.923069 -3.07962,-23.612747 -7.7e-4,-14.629331 0.0983,-15.398841 3.09958,-24.085006 4.05594,-11.738289 9.23042,-20.31798 17.51574,-29.042435 7.74954,-8.160285 14.8422,-13.253079 24.98173,-17.9378327 7.24698,-3.348308 21.35676,-6.82181415 27.80274,-6.84439607 L 400,0.47225502 V 25.891005 51.309756 l -4.01417,0.669562 c -18.2335,3.04134 -27.897,22.883788 -19.05579,39.12801 4.15799,7.6396 12.78668,13.261032 20.35518,13.261032 H 400 v 347.57969 347.57969 l -106.49351,-0.0812 c -58.57143,-0.0447 -107.55883,-0.40524 -108.86089,-0.80132 z"
   id="path20730"
   transform="scale(0.64)" /><path
   style="fill:#4d4d4d;stroke-width:0.94451"
   d="M 400,556.84851 V 366.11733 l 3.06966,-0.38094 3.06966,-0.38095 -3.06966,-0.15115 L 400,365.05313 v -51.96957 -51.96957 l 136.71783,0.27452 c 153.99576,0.3092 140.23979,-0.36734 157.49705,7.74587 18.00445,8.4645 32.00118,23.49187 39.06843,41.94525 4.01061,10.47216 5.20234,17.22956 5.10451,28.94398 -0.28935,34.64664 -22.58586,63.71397 -57.0093,74.32141 l -6.99835,2.15651 -123.94344,0.2734 -123.94343,0.27339 -0.28473,-15.37185 c -0.1566,-8.45453 -0.37969,65.91503 -0.49576,165.26568 l -0.21104,180.63754 H 412.75089 400 Z m 25.20247,-173.08228 c -0.30151,-0.75346 -0.52532,-0.52966 -0.57064,0.57065 -0.041,0.99566 0.18222,1.55352 0.49607,1.23967 0.31385,-0.31386 0.34741,-1.1285 0.0746,-1.81032 z m -0.64521,-2.47591 c 0,-0.42019 -0.64445,-1.58902 -1.43211,-2.5974 -1.32799,-1.70011 -1.3513,-1.64455 -0.32065,0.76399 1.11207,2.59881 1.75276,3.26898 1.75276,1.83341 z m -2.83353,-5.19004 c 0,-0.15784 -1.59386,-1.7517 -3.54191,-3.54191 l -3.54191,-3.25495 3.25493,3.54192 c 3.02963,3.29673 3.82889,3.97619 3.82889,3.25494 z m -8.91724,-7.7714 c -1.00838,-0.7627 -2.28347,-1.37167 -2.83353,-1.35326 -0.55006,0.0184 0.0625,0.64089 1.36116,1.38329 3.05951,1.74898 3.80434,1.73378 1.47237,-0.03 z"
   id="path20801"
   transform="scale(0.64)" /><path
   style="fill:#4d4d4d;stroke-width:0.94451"
   d="m 400,182.32507 v -77.88743 l 10.62574,0.3071 c 5.84415,0.1689 7.24575,0.13473 3.11466,-0.0759 l -7.51107,-0.38302 4.67754,-2.17681 c 8.77665,-4.084422 14.44131,-11.976853 15.27696,-21.284987 1.22456,-13.640067 -7.68655,-25.642092 -21.10696,-28.428159 L 400,51.341869 V 25.768468 0.19506774 l 6.8477,0.58961287 c 9.68282,0.83372749 16.89221,2.88533499 26.68241,7.59312099 21.77755,10.4721194 36.53213,28.7907264 42.16121,52.3454454 1.6325,6.83113 1.89433,10.308036 1.54412,20.504616 -0.37891,11.032187 -0.76746,13.282881 -3.82759,22.171387 -1.87323,5.44102 -3.32397,9.92797 -3.22386,9.97099 0.1001,0.043 4.21979,1.25123 9.15485,2.68492 60.53313,17.58556 113.49006,54.29512 150.46713,104.30331 7.58565,10.25892 16.21297,23.63024 22.21013,34.42311 l 3.01776,5.43093 H 527.51693 400 Z m 68.69343,-70.02677 c -0.31386,-0.31385 -1.12849,-0.3474 -1.81031,-0.0745 -0.75347,0.30151 -0.52966,0.52532 0.57064,0.57064 0.99567,0.041 1.55352,-0.18222 1.23967,-0.49608 z m -4.23062,-0.99939 c -0.64935,-0.26202 -1.71192,-0.26202 -2.36128,0 -0.64935,0.26202 -0.11806,0.4764 1.18064,0.4764 1.2987,0 1.82999,-0.21438 1.18064,-0.4764 z m -4.26997,-0.88963 c -0.31386,-0.31385 -1.1285,-0.3474 -1.81031,-0.0745 -0.75347,0.30151 -0.52966,0.52532 0.57064,0.57064 0.99567,0.041 1.55352,-0.18222 1.23967,-0.49608 z m -4.72255,-0.94451 c -0.31386,-0.31385 -1.1285,-0.3474 -1.81031,-0.0745 -0.75347,0.30151 -0.52966,0.52532 0.57064,0.57064 0.99567,0.041 1.55352,-0.18222 1.23967,-0.49608 z m -5.17513,-0.99939 c -0.64935,-0.26202 -1.71193,-0.26202 -2.36128,0 -0.64935,0.26202 -0.11806,0.4764 1.18064,0.4764 1.2987,0 1.82999,-0.21438 1.18064,-0.4764 z m -5.66706,-0.94451 c -0.64935,-0.26202 -1.71193,-0.26202 -2.36128,0 -0.64935,0.26202 -0.11806,0.4764 1.18064,0.4764 1.2987,0 1.82999,-0.21438 1.18064,-0.4764 z m -6.13932,-0.97006 c -0.90909,-0.23756 -2.39669,-0.23756 -3.30578,0 -0.90909,0.23757 -0.16529,0.43195 1.65289,0.43195 1.81818,0 2.56198,-0.19438 1.65289,-0.43195 z m -8.02833,-0.96 c -1.16883,-0.22513 -3.08147,-0.22513 -4.2503,0 -1.16883,0.22512 -0.21251,0.40932 2.12515,0.40932 2.33766,0 3.29398,-0.1842 2.12515,-0.40932 z"
   id="path20803"
   transform="scale(0.64)" /><path
   style="fill:#999999;stroke-width:0.94451"
   d="m 237.07202,798.60216 c -60.52871,-0.55223 -56.24677,-0.0118 -63.63932,-8.03178 -5.0831,-5.51451 -6.68248,-9.33257 -6.84065,-16.33012 -0.21996,-9.73038 5.53956,-19.03629 14.03862,-22.68283 4.38587,-1.88177 6.75712,-1.94441 99.18043,-2.62006 l 94.68713,-0.69221 V 582.77745 417.30976 l -46.90853,-0.62655 c -25.79967,-0.34459 -79.88468,-0.64945 -120.1889,-0.67747 -40.3042,-0.028 -76.4681,-0.3958 -80.3642,-0.81734 -23.38347,-2.5299 -49.081233,-22.56857 -58.846145,-45.88721 -4.566647,-10.90516 -5.756171,-17.13072 -5.774562,-30.22209 -0.01391,-9.90097 0.390271,-13.70506 2.087261,-19.64503 4.021133,-14.07516 11.19525,-25.7992 22.15689,-36.2091 14.423896,-13.69789 28.676466,-19.63716 51.826786,-21.59708 6.63747,-0.56193 7.28689,-0.80704 8.31295,-3.1376 0.61216,-1.39045 4.38177,-7.98826 8.37692,-14.66183 12.85895,-21.47986 32.15532,-45.36916 49.11262,-60.8024 34.58678,-31.47827 66.56398,-50.11317 111.40392,-64.92129 7.39752,-2.44299 13.68447,-4.82113 13.97102,-5.28477 0.28653,-0.46363 -1.02035,-5.35388 -2.90419,-10.86723 l -3.42518,-10.024268 0.36483,-15.267675 c 0.34639,-14.495866 0.52099,-15.682502 3.45385,-23.473654 10.72719,-28.496817 34.5306,-47.498033 64.77137,-51.7041386 3.99699,-0.55592866 7.45594,-1.01077938 7.68657,-1.01077938 0.23064,0 0.30615,11.35795398 0.16779,25.23989898 l -0.25156,25.2399 -3.92561,0.669759 c -21.69262,3.701023 -29.90062,31.759837 -13.59172,46.462881 4.8902,4.408686 9.12172,6.283666 14.18121,6.283666 H 400 v 347.57969 347.57969 l -54.54545,-0.21719 c -30,-0.11947 -78.77214,-0.43824 -108.38253,-0.70839 z"
   id="path21180"
   transform="scale(0.64)" /><path
   style="fill:#808080;stroke-width:0.94451"
   d="M 400,556.84851 V 366.11733 l 3.06966,-0.38094 3.06966,-0.38095 -3.06966,-0.15115 L 400,365.05313 V 313.04782 261.0425 l 123.49469,0.54045 c 125.64085,0.54984 147.94955,0.8979 156.47683,2.44131 6.59746,1.19412 22.41296,9.34163 29.81232,15.35811 11.53612,9.38011 19.80327,21.63738 24.86803,36.87057 2.64761,7.96312 2.88177,9.7205 2.91567,21.88165 0.0439,15.75529 -1.38392,22.38845 -7.53247,34.99319 -9.25014,18.9631 -25.1597,32.57086 -47.15431,40.33201 l -6.61157,2.33299 -124.86943,0.63673 -124.86941,0.63672 -0.32662,-6.88023 c -0.17964,-3.78412 -0.41107,70.58141 -0.51429,165.25674 l -0.18767,172.13695 H 412.75089 400 Z m 25.20247,-173.08228 c -0.30151,-0.75346 -0.52532,-0.52966 -0.57064,0.57065 -0.041,0.99566 0.18222,1.55352 0.49607,1.23967 0.31385,-0.31386 0.34741,-1.1285 0.0746,-1.81032 z m -1.63502,-5.07229 c -1.6772,-2.0209 -2.20598,-0.97038 -0.81748,1.62407 0.7462,1.39427 1.32741,1.75919 1.58259,0.99364 0.22181,-0.66543 -0.12249,-1.8434 -0.76511,-2.61771 z m -1.84372,-2.59366 c 0,-0.15784 -1.59386,-1.7517 -3.54191,-3.54191 l -3.54191,-3.25495 3.25493,3.54192 c 3.02963,3.29673 3.82889,3.97619 3.82889,3.25494 z m -8.50059,-7.74137 c -0.6467,-0.77922 -1.86757,-1.40325 -2.71305,-1.38673 -1.29145,0.0252 -1.24409,0.25177 0.29617,1.41677 2.38634,1.80494 3.92392,1.78583 2.41688,-0.03 z"
   id="path21190"
   transform="scale(0.64)" /><path
   style="fill:#808080;stroke-width:0.94451"
   d="m 400,182.45976 v -77.75277 l 7.79221,0.17918 c 4.28571,0.0985 6.15531,-0.004 4.15465,-0.2283 l -3.63756,-0.40747 5.01567,-3.01068 c 5.7037,-3.423673 10.69795,-9.435014 12.13372,-14.604779 2.90612,-10.464006 -0.0203,-21.149975 -7.7305,-28.227989 -3.89141,-3.572366 -6.52076,-4.763253 -16.54755,-7.49475 C 400.27394,50.6652 400,44.786433 400,25.575915 V 0.56125601 l 4.95868,0.48811389 c 10.19043,1.0031088 18.83248,3.4372911 27.82516,7.8374365 21.36117,10.4520926 34.98774,26.6319436 41.47445,49.2457676 2.26337,7.890489 2.41892,9.605613 2.03431,22.431095 -0.37445,12.486861 -0.72533,14.824657 -3.47943,23.181951 -1.68464,5.11203 -2.92443,9.41937 -2.75508,9.57185 0.16935,0.15248 5.40057,1.85946 11.62493,3.79327 64.57322,20.06194 118.53409,59.54084 154.6178,113.12161 6.77652,10.06247 17.77238,28.1545 17.77238,29.24178 0,0.40611 -57.16647,0.73838 -127.0366,0.73838 H 400 Z m 68.69343,-70.16146 c -0.31386,-0.31385 -1.12849,-0.3474 -1.81031,-0.0745 -0.75347,0.30151 -0.52966,0.52532 0.57064,0.57064 0.99567,0.041 1.55352,-0.18222 1.23967,-0.49608 z m -4.23062,-0.99939 c -0.64935,-0.26202 -1.71192,-0.26202 -2.36128,0 -0.64935,0.26202 -0.11806,0.4764 1.18064,0.4764 1.2987,0 1.82999,-0.21438 1.18064,-0.4764 z m -4.26997,-0.88963 c -0.31386,-0.31385 -1.1285,-0.3474 -1.81031,-0.0745 -0.75347,0.30151 -0.52966,0.52532 0.57064,0.57064 0.99567,0.041 1.55352,-0.18222 1.23967,-0.49608 z m -4.72255,-0.94451 c -0.31386,-0.31385 -1.1285,-0.3474 -1.81031,-0.0745 -0.75347,0.30151 -0.52966,0.52532 0.57064,0.57064 0.99567,0.041 1.55352,-0.18222 1.23967,-0.49608 z m -5.17513,-0.99939 c -0.64935,-0.26202 -1.71193,-0.26202 -2.36128,0 -0.64935,0.26202 -0.11806,0.4764 1.18064,0.4764 1.2987,0 1.82999,-0.21438 1.18064,-0.4764 z m -5.66706,-0.94451 c -0.64935,-0.26202 -1.71193,-0.26202 -2.36128,0 -0.64935,0.26202 -0.11806,0.4764 1.18064,0.4764 1.2987,0 1.82999,-0.21438 1.18064,-0.4764 z m -6.61157,-0.94451 c -0.64935,-0.26202 -1.71193,-0.26202 -2.36128,0 -0.64935,0.26202 -0.11806,0.4764 1.18064,0.4764 1.2987,0 1.82999,-0.21438 1.18064,-0.4764 z m -8.02834,-0.97006 c -0.90909,-0.23756 -2.39669,-0.23756 -3.30578,0 -0.90909,0.23757 -0.16529,0.43195 1.65289,0.43195 1.81818,0 2.56198,-0.19438 1.65289,-0.43195 z"
   id="path21192"
   transform="scale(0.64)" /><path
   style="fill:#808080;stroke-width:0.94451"
   d="M 400,774.02597 V 748.5242 h 107.4887 107.48869 l 4.90576,2.44465 c 19.04725,9.49164 19.13311,36.10912 0.14709,45.59655 l -5.92818,2.96234 H 507.05103 400 Z"
   id="path21194"
   transform="scale(0.64)" /><path
   style="fill:#808080;stroke-width:0.94451"
   d="m 400.23383,557.03406 0.23843,-190.54563 2.83353,-0.6059 2.83353,-0.6059 -3.06966,-0.11176 L 400,365.05313 V 313.12411 261.1951 l 52.18418,0.45043 c 28.7013,0.24774 88.94923,0.67758 133.8843,0.9552 44.93506,0.27762 84.99355,0.89572 89.01885,1.37355 16.10712,1.91202 37.007,15.01883 47.46807,29.76834 9.34988,13.18279 13.72493,25.27429 14.384,39.75362 0.85322,18.74432 -2.13966,31.10247 -11.24351,46.42646 -7.30021,12.28803 -22.98654,24.97177 -39.03709,31.56482 l -7.55608,3.10379 -29.27982,0.61565 c -16.10389,0.33861 -72.84533,0.74376 -126.09209,0.90035 l -96.81227,0.2847 -0.58405,-3.23733 c -0.32123,-1.78053 -0.64,72.7367 -0.70838,165.59384 l -0.12434,168.83117 H 412.74859 399.9954 Z m 24.96864,-173.26783 c -0.30151,-0.75346 -0.52532,-0.52966 -0.57064,0.57065 -0.041,0.99566 0.18222,1.55352 0.49607,1.23967 0.31385,-0.31386 0.34741,-1.1285 0.0746,-1.81032 z m -0.64521,-3.5452 c 0,-1.85306 -1.597,-3.49613 -2.51035,-2.58278 -0.74169,0.74169 0.61413,4.41606 1.62949,4.41606 0.48447,0 0.88086,-0.82497 0.88086,-1.83328 z m -2.83353,-4.61365 c 0,-0.8651 -3.46262,-4.1647 -5.66706,-5.40024 -1.24838,-0.6997 -1.25339,-0.57608 -0.0421,1.04012 3.72849,4.97499 5.70919,6.48765 5.70919,4.36012 z m -7.78748,-7.01234 c -0.21385,-0.64935 -1.39776,-1.32772 -2.63092,-1.50747 -1.95752,-0.28536 -2.08331,-0.13551 -0.991,1.18063 1.47919,1.78232 4.18156,2.02618 3.62192,0.32684 z"
   id="path21196"
   transform="scale(0.64)" /><path
   style="fill:#808080;stroke-width:0.94451"
   d="m 546.16293,259.51121 c 3.76623,-0.17928 9.92916,-0.17928 13.69539,0 3.76624,0.17928 0.68477,0.32596 -6.84769,0.32596 -7.53247,0 -10.61394,-0.14668 -6.8477,-0.32596 z"
   id="path21198"
   transform="scale(0.64)" /><path
   style="fill:#808080;stroke-width:0.613238"
   d="M 256,120.44419 V 69.339582 l 4.38253,-0.08472 c 2.41039,-0.04663 3.75107,-0.208665 2.97929,-0.360145 -1.28528,-0.252276 -1.18364,-0.419024 1.20897,-1.983613 3.18982,-2.08591 6.38888,-5.753621 7.58223,-8.693003 0.4893,-1.205201 0.9012,-4.093898 0.91535,-6.419327 0.0214,-3.524629 -0.29352,-4.895414 -1.89307,-8.23935 -2.32564,-4.8618 -5.10738,-7.280443 -10.4491,-9.085149 l -3.9377,-1.330358 -0.39425,-9.374223 C 256.17741,18.613874 256,11.360506 256,7.6511019 V 0.90672966 l 2.26682,0.0108021 c 6.42337,0.0306095 17.37092,3.91133034 24.36558,8.63717804 10.23143,6.9127382 17.77189,17.5103662 20.55622,28.8904532 0.39013,1.594539 0.88105,2.89869 1.09093,2.898114 0.20988,-5.76e-4 0.21253,4.968582 0.006,11.042574 -0.32567,9.572434 -0.58617,11.706629 -1.9555,16.020552 -0.86888,2.737318 -1.58386,5.303791 -1.58884,5.703286 -0.005,0.399487 2.64311,1.624211 5.88467,2.721615 21.32445,7.219212 37.23341,15.050522 52.74144,25.962406 17.62336,12.4003 33.31363,28.28102 45.58054,46.13382 4.5587,6.63457 13.31866,21.13282 12.97712,21.4779 -0.12359,0.12489 -36.60725,0.43324 -81.07478,0.68522 L 256,171.54879 Z m 43.9638,-46.503542 c -0.20088,-0.206722 -0.72224,-0.22882 -1.1586,-0.04907 -0.48222,0.198594 -0.33899,0.34601 0.36521,0.375861 0.63723,0.02701 0.99425,-0.120022 0.79339,-0.326751 z m -2.7076,-0.658264 c -0.41559,-0.172584 -1.09563,-0.172584 -1.51122,0 -0.41558,0.172584 -0.0756,0.313789 0.75561,0.313789 0.83117,0 1.17119,-0.141205 0.75561,-0.313789 z m -2.73278,-0.585969 c -0.20087,-0.206723 -0.72224,-0.228821 -1.1586,-0.04907 -0.48222,0.198595 -0.33898,0.346011 0.36521,0.375861 0.63723,0.02701 0.99425,-0.120022 0.79339,-0.326751 z m -3.02243,-0.622117 c -0.20087,-0.206722 -0.72224,-0.228821 -1.1586,-0.04907 -0.48222,0.198595 -0.33899,0.346011 0.36521,0.375862 0.63723,0.02701 0.99425,-0.120022 0.79339,-0.326751 z m -3.31209,-0.658264 c -0.41558,-0.172584 -1.09563,-0.172584 -1.51122,0 -0.41558,0.172583 -0.0756,0.313788 0.75561,0.313788 0.83117,0 1.1712,-0.141205 0.75561,-0.313788 z m -3.62692,-0.622117 c -0.41558,-0.172584 -1.09563,-0.172584 -1.51122,0 -0.41558,0.172584 -0.0756,0.313788 0.75561,0.313788 0.83117,0 1.1712,-0.141204 0.75561,-0.313788 z m -4.2314,-0.622117 c -0.41558,-0.172584 -1.09564,-0.172584 -1.51122,0 -0.41558,0.172584 -0.0756,0.313789 0.75561,0.313789 0.83117,0 1.17119,-0.141205 0.75561,-0.313789 z m -5.44038,-0.622117 c -0.41558,-0.172584 -1.09563,-0.172584 -1.51122,0 -0.41558,0.172584 -0.0756,0.313789 0.75561,0.313789 0.83117,0 1.1712,-0.141205 0.75561,-0.313789 z"
   id="path21200" /><path
   style="fill:#808080;stroke-width:0.94451"
   d="m 617.9567,262.37803 c 1.17489,-0.22592 2.87501,-0.21734 3.77804,0.0191 0.90304,0.2364 -0.0582,0.42125 -2.13616,0.41077 -2.07792,-0.0105 -2.81677,-0.20391 -1.64188,-0.42983 z"
   id="path21202"
   transform="scale(0.64)" /><script
   id="mesh_polyfill"
   type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
